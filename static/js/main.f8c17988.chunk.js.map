{"version":3,"sources":["hooks/useLocalStorage.js","components/TodoHeader.js","components/TodoCounter.js","components/TodoSearch.js","components/TodoList.js","components/TodoItem.js","components/CreateTodoButton.js","components/Modal.js","components/TodoForm.js","components/EmptyTodos.js","components/ChangeAlert.js","assets/withStorageListener.js","App.js","hooks/useTodos.js","index.js"],"names":["useLocalStorage","itemName","initialValue","useReducer","reducer","initialState","state","dispatch","sincronizedItem","item","useEffect","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","setItem","stringify","type","actionTypes","success","payload","onSuccess","newItem","save","onSave","sincronize","action","reducerObject","TodoHeader","children","TodoCounter","totalTodos","completedTodos","className","TodoSearch","searchValue","setSearchValue","placeholder","value","onChange","event","target","TodoList","props","renderFunc","render","onEmptyTodos","filteredText","length","onEmptySearchResults","map","TodoItem","completed","onClick","onComplete","text","onDelete","CreateTodoButton","openModal","setOpenModal","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","addTodo","useState","newTodoValue","setNewTodoValue","onSubmit","preventDefault","htmlFor","name","id","cols","rows","disabled","EmptyTodos","WrappedComponent","ChangeAlertWithStorageListener","show","toggleShow","storageChange","setStorageChange","change","key","console","log","window","addEventListener","removeEventListener","App","todos","saveTodos","setSincronizedItem","filter","todo","useMemo","toLowerCase","includes","states","stateUpdaters","toggleTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","push","useTodos","searchText","StrictMode"],"mappings":"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","file":"static/js/main.f8c17988.chunk.js","sourcesContent":["import { useEffect, useReducer } from \"react\"\n\nfunction useLocalStorage(itemName, initialValue) {\n\n    const [state, dispatch] = useReducer(reducer, initialState({ initialValue }));\n\n    const {\n        sincronizedItem,\n        item\n    } = state\n\n\n    // const [sincronizedItem, setSincronizedItem] = useState(true)\n    // const [item, setItem] = useState(initialValue)\n\n    //Action Creators\n    const onSuccess = (parsedItem) => dispatch({\n        type: actionTypes.success,\n        payload: parsedItem\n    })\n    const onSave = (newItem) => dispatch({\n        type: actionTypes.save,\n        payload: newItem\n    })\n    const onSincronize = ()=> dispatch({\n        type: actionTypes.sincronize\n    })\n\n    useEffect(() => {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        if (!localStorageItem) {\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\n            parsedItem = initialValue;\n        } else {\n            parsedItem = JSON.parse(localStorageItem);\n        }\n        onSuccess(parsedItem)\n\n    }, [sincronizedItem])\n\n    const saveItem = (newItem) => {\n        localStorage.setItem(itemName, JSON.stringify(newItem))\n        onSave(newItem)\n        // setItem(newItem)\n    }\n\n    const sincronizeItem = () => {\n        onSincronize()\n    }\n\n    return [\n        item,\n        saveItem,\n        sincronizeItem\n    ]\n}\n\nconst initialState = ({ initialValue }) => ({\n    sincronizedItem: true,\n    item: initialValue\n})\n\nconst actionTypes = {\n    success: 'SUCCESS',\n    save: 'SAVE',\n    sincronize: 'SINCRONIZE'\n}\n\nconst reducerObject = (state, payload) => ({\n    [actionTypes.success]: {\n        ...state,\n        sincronizedItem: true,\n        item: payload\n    },\n    [actionTypes.save]: {\n        ...state,\n        item: payload\n    },\n    [actionTypes.sincronize]: {\n        ...state,\n        sincronizedItem: false,\n    }\n})\n\nconst reducer = (state, action) => {\n    return reducerObject(state, action.payload)[action.type] || state\n}\n\nexport { useLocalStorage };","import React from 'react'\n\nfunction TodoHeader({ children }) {\n    return (\n        <header>\n            {children}\n        </header>\n    )\n}\n\nexport { TodoHeader }\n","import React from 'react'\n\nfunction TodoCounter({ totalTodos, completedTodos }) {\n\n    return (\n        <h2 className=\"todo-counter\">\n            Has completado {completedTodos} de {totalTodos} TODOs\n        </h2>\n    )\n}\n\nexport { TodoCounter }","import React from \"react\"\n\n\nfunction TodoSearch({ searchValue, setSearchValue }) {\n\n    const onSearchValueChange = (event) => {\n        setSearchValue(event.target.value)\n    }\n\n    return (\n        <input className=\"todo-search\" placeholder=\"Search...\" type=\"text\" value={searchValue} onChange={onSearchValueChange} />\n    )\n}\n\nexport { TodoSearch }\n","import React from 'react'\n\nfunction TodoList(props) {\n    const renderFunc =  props.children || props.render;\n    return (\n        <section className=\"todo-list\">\n            {!props.totalTodos && props.onEmptyTodos()}\n            {(!!props.totalTodos && !props.filteredText.length) && props.onEmptySearchResults(props.searchValue) }\n            {props.filteredText.map(renderFunc)}\n        </section>\n    )\n}\n\nexport { TodoList }\n","import React from 'react'\nimport { FaCheck } from \"react-icons/fa\"\nimport { ImCross } from \"react-icons/im\"\n\nfunction TodoItem(props) {\n    return (\n        <li className=\"todo-item\">\n            <span className ={`icon icon-check ${props.completed && 'icon-check--active'}`} onClick={props.onComplete}> <FaCheck /></span>\n            <p className={`${props.completed && 'todo-item-p-completed'}`}>{props.text} </p>\n            <span className=\"icon icon-delete\" onClick={props.onDelete} >  <ImCross /> </span>\n        </li >\n    )\n}\n\nexport { TodoItem }\n","import React from 'react'\n\nfunction CreateTodoButton({ openModal, setOpenModal }) {\n    const onClickButton = () => {\n        setOpenModal(!openModal)\n    }\n    return (\n        <button className=\"create-todo-button\"\n            onClick={onClickButton}\n        >\n            +\n        </button>\n    )\n}\n\nexport { CreateTodoButton }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction Modal({ children }) {\n  return ReactDOM.createPortal(\n    <div className=\"ModalBackground\">{children}</div>,\n    document.getElementById(\"modal\")\n  );\n}\n\nexport { Modal };\n","import React, { useState } from \"react\";\nimport { ImCross } from \"react-icons/im\";\n\nfunction TodoForm({ addTodo, setOpenModal }) {\n  const [newTodoValue, setNewTodoValue] = useState(\"\");\n  const onCancel = () => {\n    setOpenModal(false);\n  };\n  const onSubmit = (event) => {\n    event.preventDefault();\n    addTodo(newTodoValue);\n    setOpenModal(false);\n  };\n  const onChangeText = (event) => {\n    setNewTodoValue(event.target.value);\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <label htmlFor=\"text-todo\">Escribe un nuevo TODO</label>\n      <textarea\n        name=\"\"\n        id=\"text-todo\"\n        cols=\"30\"\n        rows=\"10\"\n        placeholder=\"Agregue su tarea\"\n        value={newTodoValue}\n        onChange={onChangeText}\n      ></textarea>\n      {/* <div className=\"todoForm__buttonContainer\"> */}\n      <span className=\"todoForm-button__cancel\" onClick={onCancel}>\n        <ImCross />{\" \"}\n      </span>\n      <button\n        type=\"submit\"\n        className=\"todoForm-button todoForm-button__add\"\n        disabled={newTodoValue.length <= 0}\n      >\n        Añadir\n      </button>\n      {/* </div> */}\n    </form>\n  );\n}\n\nexport { TodoForm };\n","import React from \"react\";\n\nfunction EmptyTodos() {\n  return (\n    <>\n      <p className=\"empty-todos\">Agregue una tarea a realizar</p>\n    </>\n  );\n}\n\nexport { EmptyTodos };\n","import React from 'react'\nimport { withStorageListener } from '../assets/withStorageListener'\n\nfunction ChangeAlert({ show, toggleShow }) {\n    if (show) {\n        return (\n            <div className=\"ChangeAlert-bg\">\n                <div className=\"alert-container\">\n                    <p>Hubo cambios en la lista</p>\n                    <button onClick={() => toggleShow(false)}>\n                        Actualizar\n                    </button>\n\n                </div>\n\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nconst ChangeAlertWithStorageListener = withStorageListener(ChangeAlert)\n\nexport { ChangeAlertWithStorageListener }\n","import React, { useState, useEffect } from 'react'\n\nfunction withStorageListener(WrappedComponent) {\n    return function WrappedComponentWithStorageListener(props) {\n        const [storageChange, setStorageChange] = useState(false);\n\n        useEffect(() => {\n            const onChange = (change) => {\n                if (change.key === 'TODOS_V1') {\n                    console.log('Hubo cambios en TODO_V1')\n                    setStorageChange(true)\n                }\n            }\n            window.addEventListener('storage', onChange)\n            return () => {\n                window.removeEventListener('storage', onChange)\n            }\n        }, [])\n\n        const toggleShow = () => {\n            setStorageChange(false)\n            props.sincronize(false)\n        }\n\n        return (\n            <WrappedComponent\n                show={storageChange}\n                toggleShow={toggleShow}\n            />)\n    }\n}\nexport { withStorageListener }\n","import React from \"react\";\nimport { useTodos } from \"./hooks/useTodos\";\nimport { TodoHeader } from \"./components/TodoHeader\";\nimport { TodoCounter } from \"./components/TodoCounter\";\nimport { TodoSearch } from \"./components/TodoSearch\";\nimport { TodoList } from \"./components/TodoList\";\nimport { TodoItem } from \"./components/TodoItem\";\nimport { CreateTodoButton } from \"./components/CreateTodoButton\";\nimport { Modal } from \"./components/Modal\";\nimport { TodoForm } from \"./components/TodoForm\";\nimport { EmptyTodos } from \"./components/EmptyTodos\";\nimport { ChangeAlertWithStorageListener } from \"./components/ChangeAlert\";\n\nfunction App() {\n  const { states, stateUpdaters } = useTodos();\n\n  const { filteredText, totalTodos, completedTodos, searchValue, openModal } =\n    states;\n  const {\n    toggleTodo,\n    deleteTodo,\n    setSearchValue,\n    setOpenModal,\n    addTodo,\n    setSincronizedItem,\n  } = stateUpdaters;\n\n  return (\n    <>\n      <TodoHeader>\n        <TodoCounter totalTodos={totalTodos} completedTodos={completedTodos} />\n        <TodoSearch searchValue={searchValue} setSearchValue={setSearchValue} />\n      </TodoHeader>\n\n      <TodoList\n        filteredText={filteredText}\n        totalTodos={totalTodos}\n        searchValue={searchValue}\n        onEmptyTodos={() => <EmptyTodos />}\n        onEmptySearchResults={(searchText) => (\n          <p className=\"empty-todos\">No hay resultados para: {searchText}</p>\n        )}\n        render={(todo) => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => toggleTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        )}\n      >\n        {/* {todo => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => toggleTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        )\n        } */}\n      </TodoList>\n\n      {/* <TodoList>\n        {filteredText.map(todo => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => toggleTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)} />\n        ))}\n      </TodoList> */}\n\n      {openModal && (\n        <Modal>\n          <TodoForm addTodo={addTodo} setOpenModal={setOpenModal} />\n        </Modal>\n      )}\n      <CreateTodoButton openModal={openModal} setOpenModal={setOpenModal} />\n\n      <ChangeAlertWithStorageListener sincronize={setSincronizedItem} />\n    </>\n  );\n}\nexport default App;\n","import { useState, useMemo } from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\n\n\nfunction useTodos() {\n\n    const [todos, saveTodos, setSincronizedItem] = useLocalStorage('TODOS_V1', []);\n\n    const [searchValue, setSearchValue] = useState('');\n    const [openModal, setOpenModal] = useState(false);\n\n    const completedTodos = todos.filter(todo => !!todo.completed).length;\n    const totalTodos = todos.length;\n\n    const filteredText = useMemo(() =>\n        todos.filter((todo) => {\n            return todo.text.toLowerCase().includes(searchValue.toLowerCase())\n        }), [todos, searchValue]\n    )\n\n\n\n    const toggleTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos[todoIndex].completed = !todos[todoIndex].completed;\n        saveTodos(newTodos);\n    }\n\n    const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n        saveTodos(newTodos);\n    }\n\n    const addTodo = (text) => {\n        const newTodos = [...todos];\n        newTodos.push({\n            completed: false,\n            text,\n        }\n        );\n        saveTodos(newTodos);\n    }\n\n    const states={\n        totalTodos,\n        completedTodos,\n        searchValue,\n        filteredText,\n        openModal,\n    }\n    const stateUpdaters={\n        setSearchValue,\n        toggleTodo,\n        deleteTodo,\n        setOpenModal,\n        addTodo,\n        setSincronizedItem\n    }\n\n    return {states, stateUpdaters}\n}\n\nexport { useTodos }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}